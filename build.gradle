plugins {
  id "org.springframework.boot" version "2.2.1.RELEASE"
  id 'java'
  //id 'com.intershop.gradle.jaxb' version '4.0.0' // run with JDK8 ...
  id "net.ltgt.apt" version "0.21"
  //id "com.google.protobuf" version "0.8.5" apply false
  id 'jacoco'
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

war {
  enabled = true
}

configurations {
  mapstruct
}

eclipse {
  wtp {
    facet {
      facet name: 'jst.java', version: '11'
      facet name: 'jst.web', version: '4.0'
      def oldJstWebFacet = facets.findAll {
        it.name == 'jst.web' && it.version == '2.4' || it.name == 'jst.java' && it.version == '1.8' || it.name == 'jst.java' && it.version == '1.9' || it.name == 'jst.java' && it.version == '1.10'
      }
      facets.removeAll(oldJstWebFacet)
    }
  }
}

jar {
  archiveBaseName = 'webservices-bench'
  archiveVersion =  '0.1.0'
}

bootRun {
  //jvmArgs = ['--add-modules','java.xml,java.xml.bind,java.xml.ws']
}

sourceCompatibility = 11
targetCompatibility = 11

allprojects {
  sourceCompatibility = 11
  eclipse.project {
    natures 'org.eclipse.buildship.core.gradleprojectnature'
  }
  // Allows to run JUnit tests in Eclipse and have compilation warning for Mapstruct +
  project.plugins.withId("net.ltgt.apt") {
    // automatically apply net.ltgt.apt-eclipse whenever net.ltgt.apt is used
    project.apply plugin: "net.ltgt.apt-eclipse"
  }
  // Allows to run JUnit tests in Eclipse and have compilation warning for Mapstruct -
}

compileJava {
  options.compilerArgs += [
    '-s', projectDir.absolutePath + '/src/thrift.generated/java',
    '-s', projectDir.absolutePath + '/src/soap.generated/java',
    '-s', projectDir.absolutePath + '/src/protobuf.generated/java'
  ]
}

sourceSets {
  main {
    java {
      srcDir "src/thrift.generated/java"
      srcDir "src/soap.generated/java"
      srcDir "src/protobuf.generated/java"
    }
  }
}

//jaxb {
//  javaGen {
//    posConfig {
//      packageName = 'com.github.vlachenal.webservice.bench.soap.api'
//      schemas = fileTree(dir: 'src/main/resources', include: '**/*.xsd')
//      outputDir = file("${projectDir}/src/soap.generated/java")
//      encoding = 'UTF-8'
//    }
//  }
//}

/*protobuf {
  generatedFilesBaseDir = "$projectDir/src/protobuf.generated"
}*/

tasks.withType(JavaCompile) {
  options.compilerArgs = [
    '-Amapstruct.suppressGeneratorTimestamp=true'
  ]
}

repositories {
  mavenCentral()
}

jacocoTestReport {
  reports {
    xml.enabled = true
    html.enabled = true
  }
}

check.dependsOn jacocoTestReport

// Use JUnit5 +
configurations {
  all {
    exclude group: 'junit', module: 'junit'
  }
}

test {
  useJUnitPlatform()
}
// Use JUnit5 -

ext {
  mapstructVersion = "1.3.1.Final"
  protobufVersion = "3.10.0"
  jaxbVersion = "2.2.11"
}

dependencies {
  // REST
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-hateoas'
  implementation "org.springdoc:springdoc-openapi-ui:1.2.10"
  // SQL
  implementation 'org.springframework.boot:spring-boot-starter-jdbc'
  implementation 'org.postgresql:postgresql:42.2.8'
  //compile 'mysql:mysql-connector-java:8.0.17'
  implementation "com.github.vlachenal:sql-request-builder:0.13"
  // Thrift
  implementation 'org.apache.thrift:libthrift:0.13.0'
  // SOAP
  implementation 'org.springframework.boot:spring-boot-starter-web-services'
  implementation 'wsdl4j:wsdl4j:1.6.3'
  // Protocol buffer
  implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
  implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
  // Dozer
  implementation 'com.github.dozermapper:dozer-core:6.5.0'
  implementation 'com.github.dozermapper:dozer-proto3:6.5.0'
  // MapStruct
  implementation "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
  annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
  // tests
  providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
  // Continous integration
  implementation 'org.hsqldb:hsqldb:2.5.0'
}
